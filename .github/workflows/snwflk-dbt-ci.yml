name: Snowflake DBT models

on:
    push:
        branches:
            - main
    # Allow to run this workflow manually from the Actions Tab
    workflow_dispatch:

jobs:
    dbt-ci-jobs:
        runs-on: ubuntu-latest
        environment: dev
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Installing Python
              uses: actions/setup-python@v5
              with:
                python-version: '3.9'
    
            # - name: Make Script Executable
            #   run: chmod +x scritps/setup_dbt_env.sh
            
            # - name: Create Python Virtual Environment and install DBT
            #   run: bash /scritps/setup_dbt_env.sh
            #   env:
            #     SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
            #     SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
            #     SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
            #     SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
            #     SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
            #     SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
            #     SNOWFLAKE_PRIVATE_KEY_RAW: ${{ secrets.SNOWFLAKE_PRIVATE_KEY_RAW }}
            #     SNOWFLAKE_PRIVATE_KEY_PASSPHRASE: ${{ secrets.SNOWFLAKE_PRIVATE_KEY_PASSPHRASE }}
            
            - name: Running the shell script
              shell: bash
              run: |
                #!/bin/bash
                ###########exit immediately if a command exits with a non-zero status
                set -e
                ###########fail the script if any command in a pipeline fails
                set -o pipefail
                echo "Starting DBT Setup script"
                if ! command -v python &> /dev/null; then
                    echo "Python is not installed. Please install Python and try again."
                    exit 1
                else
                    echo "Python is installed. $(python --version)"
                    python -m venv dbt-env
                fi
                if [ -d "dbt-env" ]; then
                    echo "Virtual environment created successfully."
                else
                    echo "Failed to create virtual environment."
                    exit 1
                fi
                if ! command -v dbt &> /dev/null; then
                    echo "DBT is not installed. Installing DBT..."
                    source dbt-env/bin/activate
                    pip install dbt-snowflake
                else
                    echo "DBT is already installed."
                fi
                if ! command -v dbt &> /dev/null; then
                    echo "DBT installation failed. Please check the installation process."
                    exit 1
                else
                    echo "DBT is installed successfully. $(dbt --version)"
                fi

                mkdir -p ~/.dbt
                cat > ~/.dbt/profiles.yml <<EOF
                pass_snwflk_demo:
                  target: dev
                  outputs:
                    dev:
                      type: snowflake
                      account: ${{ secrets.SNOWFLAKE_ACCOUNT }}
                      user: ${{ secrets.SNOWFLAKE_USER }}
                      role: ${{ secrets.SNOWFLAKE_ROLE }}
                      database: ${{ secrets.SNOWFLAKE_DATABASE }}
                      warehouse: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
                      schema: ${{ secrets.SNOWFLAKE_SCHEMA }}
                      private_key: ${{ secrets.SNOWFLAKE_PRIVATE_KEY_RAW }}
                
                dbt debug 

            - name: List files in the repository
              run: |
               ls ${{ github.workspace }}
              
            # - name: Run DBT model with debug
            #   run: |
            #    cd ${{ github.workspace }}
            #    dbt run --select my_first_dbt_model

            - name: Pipeline status
              run: echo "the job status is ${{ job.status }}"
